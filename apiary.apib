FORMAT: 1A

# Album Parrot API

# Group Introduction

# Security [/authenticate]
Authenticating Users

Authentication is managed through JSON Web Tokens (JWT). Once you have a token, you should pass it in the Authentication HTTP header on all subsequent requests.
Tokens are single use, and you will get a new token returned to you as an Authentication header in the response.
You should use the new token on the next request, and so on.

## Fetch a security token [POST]
Authenticates the credentials passed, and returns a token for future requests if successful.

+ Request (application/json)
    + Body

            [
                {
                    "email": "me@design-studio.com",
                    "password": "P$a$$w0rd"
                }
            ]

+ Response 200 (application/json)
    + Body

            {
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6XC9cL2FwaS5kZXYuYWxidW1wYXJyb3QuY29tXC9hdXRoZW50aWNhdGUiLCJpYXQiOjE0NjExNzk5NjIsImV4cCI6MTQ2MTE4MzU2MiwibmJmIjoxNDYxMTc5OTYyLCJqdGkiOiJjNjhiMWRmOTM1ZjVmMmI5NjdhOGJjYjYwMDBjOGFhNSJ9.7de57BSaYwPJ9cFu4j1NsP6AXwNya_Ose2scho_tMEc"
            }

# Group Proofing
# Albums [/albums]
Album resource representation.

# Group Emails
# Email Settings [/email/settings]

# Email Templates [/email/templates]

# Email Logs [/email/log]

# Group Designer
# Albums [/designer/albums]
Album design resource representation.

## Get all albums [GET]
Get all the album designs associated with the current user.

+ Response 200 (application/json)
    + Body

            {
                "data": [
                    {
                        "id": "050b29e7-414f-4018-94c7-74c814c9c220",
                        "title": "voluptates porro sapiente"
                    },
                    {
                        "id": "07ce8d6d-d0b4-4aea-bff6-dc7bf559894c",
                        "title": "ea consequatur omnis"
                    }
                ]
            }

## Get a single album design [GET /designer/albums/{album}]
Get the specific album design

+ Parameters
    + album: `050b29e7-414f-4018-94c7-74c814c9c220` (string, required) - The id of the album to fetch

+ Response 200 (application/json)
    + Body

            {
                "data": {
                    "id": "050b29e7-414f-4018-94c7-74c814c9c220",
                    "title": "voluptates porro sapiente"
                }
            }

## Create an album design [POST]
Create a new album design

+ Response 200 (application/json)
    + Body

            []

## Update an existing album design [PUT /designer/albums/{album}]
Update an existing album design

+ Parameters
    + album: `050b29e7-414f-4018-94c7-74c814c9c220` (string, required) - The id of the album to update

+ Response 200 (application/json)
    + Body

            []

## Delete an album [DELETE /designer/albums/{album}]
Deleting the specified album will delete all related spreads.

+ Parameters
    + album: `050b29e7-414f-4018-94c7-74c814c9c220` (string, required) - The id of the album to delete

+ Response 200 (application/json)
    + Body

            []

# Spreads [/designer/albums/{album}]

# Templates [/designer/templates]
Album design templates representation.

## Fetch Templates [GET /designer/templates{?type,photosPerSpread}]
Get all the template applicable to the specified type of album design, and number of photos per spread.

This will return a series of templates containing references to the position and size of each photo area.
These should be interpreted as ratios to be applied against both the real size of the album canvas and the size of the album design
visually on the screen.

+ Parameters
    + type: `square` (string, optional) - The type of album design. Available options are square, vertical and horizontal
        + Default: square
    + photosPerSpread: `1` (number, optional) - The number of areas in the spread
        + Default: 1

+ Response 200 (application/json)
    + Body

            {
                "data": [
                    {
                        "id": "9d06b091-c72d-4ce2-b257-2ab1fce6a8ca",
                        "areas": [
                            {
                                "order": 0,
                                "top": 0,
                                "left": 0,
                                "width": 1,
                                "height": 1
                            }
                        ]
                    }
                ]
            }